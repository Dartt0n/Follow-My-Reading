stages:
  - linting

include:
  - template: Code-Quality.gitlab-ci.yml

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH

code_quality:    
  stage: linting
  artifacts:
    expire_in: 14 days
    paths: [gl-code-quality-report.json]

code_quality_html:
  stage: linting
  extends: code_quality
  variables:
    REPORT_FORMAT: html
  artifacts:
    expire_in: 14 days
    paths: [gl-code-quality-report.html]

ruff:
  stage: linting
  image: registry.gitlab.com/pipeline-components/ruff:latest
  script:
    - ruff --format=gitlab . > gl-code-quality-report.json
    - cat gl-code-quality-report.json # debug
  artifacts:
    when: always
    expire_in: 14 days
    paths: [gl-code-quality-report.json]

mypy:
  stage: linting
  image: python:3.10-slim-buster
  before_script:
    - pip install poetry 
    - poetry config virtualenvs.create false
    - poetry install --only mypy
  script:
    - ls -R # debug
    - poetry run sh -lic "(mypy --config-file mypy.ini --no-error-summary . | mypy-gitlab-code-quality > gl-code-quality-report.json) || true"
    - cat gl-code-quality-report.json # debug
  artifacts:
    when: always
    expire_in: 14 days
    paths: [gl-code-quality-report.json]