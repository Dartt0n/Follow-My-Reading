stages:
  - lint
  - quality
  - test

include:
  - template: Code-Quality.gitlab-ci.yml

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

code_quality:    
  stage: quality
  artifacts:
    expire_in: 14 days
    paths: [gl-code-quality-report.json]

code_quality_html:
  stage: quality
  extends: code_quality
  variables:
    REPORT_FORMAT: html
  artifacts:
    expire_in: 14 days
    paths: [gl-code-quality-report.html]

ruff:
  stage: lint
  image: registry.gitlab.com/pipeline-components/ruff:latest
  script:
    - ruff --format=gitlab . > gl-code-quality-report.json
  artifacts:
    when: always
    expire_in: 14 days
    # paths: [gl-code-quality-report.json]
    reports:
      codequality: gl-code-quality-report.json


mypy:
  stage: quality
  image: python:3.10-slim-buster
  before_script:
    - pip install poetry 
    - poetry config virtualenvs.create false
    - poetry install --only mypy
  script:
    - poetry run sh -lic "(mypy --config-file mypy.ini --no-error-summary . | mypy-gitlab-code-quality > gl-code-quality-report.json) || true"
  artifacts:
    when: always
    expire_in: 14 days
    # paths: [gl-code-quality-report.json]
    reports:
      codequality: gl-code-quality-report.json
