stages:
  - linting
  - test

include:
  - template: Code-Quality.gitlab-ci.yml

code_quality:
  stage: linting
  artifacts:
    expire_in: 14 days
    paths: [gl-code-quality-report.json]

code_quality_html:
  stage: linting
  extends: code_quality
  variables:
    REPORT_FORMAT: html
  artifacts:
    expire_in: 14 days
    paths: [gl-code-quality-report.html]

ruff:
  stage: linting
  image: registry.gitlab.com/pipeline-components/ruff:latest
  script:
    - ruff --format=gitlab . > gl-code-quality-report.json
  allow_failure: true
  artifacts:
    when: always
    expire_in: 14 days
    paths: [gl-code-quality-report.json]

mypy:
  stage: linting
  image: python:alpine
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:
    paths:
      - .cache/pip/
      - venv/
      - .mypy_cache/
  before_script:
    - python -m venv venv
    - . venv/bin/activate
  script:
    - pip install mypy mypy-gitlab-code-quality
    - mypy program.py --no-error-summary > mypy-out.txt
    - PYTHONHASHSEED=0 mypy-gitlab-code-quality < mypy-out.txt > gl-code-quality-report.json
  allow_failure: true
  artifacts:
    when: always
    expire_in: 14 days
    paths: [gl-code-quality-report.json]