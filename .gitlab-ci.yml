include:
  - template: Code-Quality.gitlab-ci.yml

stages:
  - lint
  - quality
  - test
  - build
  - deploy

ruff:
  stage: lint
  image: registry.gitlab.com/pipeline-components/ruff:latest
  script:
    - ruff --format=gitlab . > gl-code-quality-report.json
  allow_failure: true
  artifacts:
    when: always
    expire_in: 14 days
    # paths: [gl-code-quality-report.json]
    reports:
      codequality: gl-code-quality-report.json

mypy:
  stage: quality
  image: python:3.10-slim-buster
  before_script:
    - pip install poetry 
    - poetry config virtualenvs.create false
    - poetry install --only mypy
  script:
    - poetry run sh -lic "(mypy --config-file mypy.ini --no-error-summary . | mypy-gitlab-code-quality > gl-code-quality-report.json) || true"
  artifacts:
    when: always
    expire_in: 14 days
    # paths: [gl-code-quality-report.json]
    reports:
      codequality: gl-code-quality-report.json

code_quality:    
  stage: quality
  dependencies:
    - ruff
    - mypy
  artifacts:
    expire_in: 14 days
    paths: [gl-code-quality-report.json]

code_quality_html:
  stage: quality
  extends: code_quality
  variables:
    REPORT_FORMAT: html
  artifacts:
    expire_in: 14 days
    paths: [gl-code-quality-report.html]

pages:
  stage: build
  image: node
  before_script:
    - apt-get update
    - apt-get install python python3-pip -y
    - npm install -g @redocly/cli
    - pip install poetry 
    - poetry config virtualenvs.create false
    - poetry install --only docs
  script:
    - poetry run python3 docs.py
    - npx @redocly/cli build-docs -o ./public/index.html openapi.json
  artifacts:
    paths:
      - public